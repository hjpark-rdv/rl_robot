<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur3e_robot">
  <xacro:include filename="$(find ur_description)/urdf/inc/ur3e_macro.xacro"/>
  <xacro:ur3e_robot prefix="" transmission_hw_interface="hardware_interface/EffortJointInterface"/>  


  <!-- 더미 월드 링크 -->
  <link name="world_link"/>

  <!-- 베이스 플레이트 링크 (무겁고 단단한 재질) -->
  <link name="base_plate">
    <visual>
      <geometry>
        <box size="1.0 1.0 0.05"/>
      </geometry>
      <material name="steel">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="1.0 1.0 0.05"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1e8</kp>
            <kd>1e4</kd>
          </ode>
        </contact>
      </surface>
    </collision>
    <inertial>
      <mass value="1000.0"/>
      <inertia ixx="83.354" ixy="0.0" ixz="0.0" iyy="83.354" iyz="0.0" izz="166.667"/>
    </inertial>
  </link>

  <!-- world_link와 base_plate 연결 -->
  <joint name="world_to_base_plate" type="fixed">
    <parent link="world_link"/>
    <child link="base_plate"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  

  <!-- base_plate와 base_link 연결 -->
  <joint name="base_plate_to_base_link" type="fixed">
    <parent link="base_plate"/>
    <child link="base_link"/>
    <origin xyz="0 0 0.025" rpy="0 0 0"/>
  </joint>

  <!-- 스탠드 링크 -->
  <link name="stand_base">
    <visual>
      <geometry>
        <box size="0.02 0.02 0.5"/> <!-- 1m 높이 스탠드 -->
      </geometry>
      <material name="silver">
        <color rgba="0.75 0.75 0.75 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.5"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="5.0"/>
      <inertia ixx="0.416" ixy="0.0" ixz="0.0" iyy="0.416" iyz="0.0" izz="0.833"/>
    </inertial>
  </link>

  <!-- world_link와 stand_base 연결 -->
  <joint name="world_to_stand" type="fixed">
    <parent link="world_link"/>
    <child link="stand_base"/>
    <origin xyz="0.0 0.52 0.3" rpy="0 0 0"/> <!-- 로봇 옆으로 이동 -->
  </joint>

  <!-- 카메라 링크 -->
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
  </link>

  <joint name="stand_to_camera" type="fixed">
    <parent link="stand_base"/>
    <child link="camera_link"/>
    <origin xyz="0 0.0 0.25" rpy="0 0.4 -0.7"/> <!-- 스탠드 위쪽 -->
  </joint>

<!-- 새로운 depth_link 정의 -->
  <link name="depth_link"/>

  <!-- camera_link와 depth_link 연결 -->
  <joint name="camera_to_depth" type="fixed">
    <parent link="camera_link"/>
    <child link="depth_link"/>
    <origin xyz="0.1 0 0.1" rpy="-1.57 0 -1.57"/> <!-- 기본적으로 동일한 위치와 방향 -->
  </joint>


  <!-- Gazebo 설정 -->
  <gazebo reference="camera_link">
    <sensor type="depth" name="rgbd_camera">
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth>
          <range>
            <min>0.1</min>
            <max>5.0</max>
          </range>
        </depth>
      </camera>
      <plugin name="depth_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.1</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>depth_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/ur3e</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
</robot>